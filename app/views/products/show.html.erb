<h1>Products</h1>

<p><%= @product[:name] %></p>

<p><%= @product[:description] %></p>

<p><%= @product.formatted_price %></p>

<% if current_user %>

  <h3>Reviews</h3>

  <p>Reviews for <%= @product.name %></p>

  <% @product.reviews.each do |review| %>
    <p>
      <%= review.comment %>
      <br>
      <% if review.user != nil %>
        <em> by <%= review.user.email %></em>
        Added on: <%= review.created_at %>
      <% end %>
    </p>
  <% end %>

<% end %>

<% if current_user %>

  <h3>Reviews</h3>

  <p>Reviews for <%= @product.name %></p>

  <% @product.reviews.each do |review| %>
    <p>
      <%= review.comment %>
      <br>
      <% if review.user != nil %>
        <em> by <%= review.user.email %></em>
        Added on: <%= review.created_at %>
      <% end %>
    </p>
  <% end %>

<% end %>
Since we are required to associate a review with a product when it one is created, we will need to build that association. Luckily Rails' form_for makes it incredibly easy for us to do this. We pass an array to form_for like so: <%= form_for([@product, @review]) do |f| %>.

app/views/products/show.html.erb

.
.
.
<% if current_user %>
.
.
.
  <h4>New Review</h4>

  <%= form_for([@product, @review]) do |f| %>
    <% if @review.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(@review.errors.count, "error") %> prohibited this review from being saved:</h2>

        <ul>
        <% @review.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
        </ul>
      </div>
    <% end %>

    <div class="field">
      <%= f.label :comment %><br />
      <%= f.text_area :comment %>
    </div>
    <div class="actions">
      <%= f.submit %>
    </div>
  <% end %>

<% else %>
  <p>Please <%= link_to "log in", new_session_path %> to add a review.</p> 
<% end %>

	

